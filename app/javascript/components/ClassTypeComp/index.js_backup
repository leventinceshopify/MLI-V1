// app/javascript/components/Library
import React, { useState } from "react";
import { Query } from "react-apollo";
import { ProductsQuery } from "./operations.graphql";
import cs from "./styles";

import {
  Layout,
  Page,
  FooterHelp,
  Card,
  Link,
  Button,
  FormLayout,
  TextField,
  AccountConnection,
  ChoiceList,
  SettingToggle,
} from '@shopify/polaris';

// import "@shopify/polaris@4.0.0/styles.min.css";
import '@shopify/polaris/styles.css';






// !!!!!!!!!!!!!!!
// Inside the component the .prop object contains the data object
// The data we need is contained in this.prop.data.allproducts property




const Inventory = () => {
  const [product, setProduct] = useState(null);




  return (
    //follwing code is important because when the page is loaded for the first data
    //there isn't data (graphql is empty) and until the data is fetced from DB it stays like that
    //if we don't perform following chech the .map cannot be executed on empty data and it gives an error.
    //.loading is a flag in prop.data which indicates the request is still pending.



    <Query query={ProductsQuery}>


      {({ data, loading }) => (
        <div className={cs.inventory}>

          {loading || !data.allProducts
            ? "loading..."
            // : data.allProducts.map(({ name, id, description }) => (

             //allproducts is an array
              : data.allProducts.map( product => { return(
               <ul key={product.id}>
                {product.id}
                <button onClick={showWhatButtonDoes}  className="Polaris-Button Polaris-Button--primary">{product.id}</button>
                <li>Name: {product.name}</li>
                <li>Overview: {product.description}</li>
                <li>Variants: </li>
                {product.variants.map ( variant => { return (
                      <ul key={variant.id}>
                        <li>{variant.name}</li>
                        <li>Items: </li>
                          {variant.items.map ( item => { return (
                                <ul key={item.id}>
                                  <li>{item.name}</li>
                                </ul>
                              )})}
                      </ul>
                    )})}
              </ul>

            )
                // <button
                //   key={id}
                //   className={cs.plate}
                //   onClick={() => setProduct({ name, id, description })}
                // >
                //   <div className={cs.title}>{name}</div>
                //   <div>{description}</div>
                //
                //
                // </button>
              // ))}
            })}
        </div>
      )}

    </Query>

  );
};

function showWhatButtonDoes(){

  console.log("id button is pressed");
}


export default Inventory;
